import pandas as pd
import numpy as np
import sklearn
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import StandardScaler


df = pd.read_csv("heart_disease.csv")

df = df.drop(['education'], axis=1)
df = pd.get_dummies(df, columns=['Gender', 'prevalentStroke','Heart_ stroke'], drop_first=True)
x = df.drop(['Heart_ stroke_yes'], axis=1)
y = df['Heart_ stroke_yes']


x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.1, random_state=18)
scaler = StandardScaler()
scaler.fit(x_train)
x_train = scaler.transform(x_train)
x_test = scaler.transform(x_test)
x_test
from sklearn.linear_model import LogisticRegression
from sklearn.neighbors import KNeighborsClassifier
from sklearn.svm import SVC
from sklearn.naive_bayes import GaussianNB
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier
from xgboost import XGBClassifier

from sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score, f1_score, fbeta_score, classification_report
models = {
    'LR': LogisticRegression(),
    'KNN': KNeighborsClassifier(),
    'SVM': SVC(),
    'DT': DecisionTreeClassifier(),
    'RF': RandomForestClassifier(),
    'XGB': XGBClassifier()
}

model = LogisticRegression()
model.fit(x_train, y_train)

trained_model = model
